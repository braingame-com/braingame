name: Performance Testing

on:
  pull_request:
    branches: [main]
    paths:
      - 'apps/product/**'
      - 'packages/bgui/**'
      - '.github/workflows/performance.yml'

jobs:
  performance-test:
    name: React Native Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Get base branch performance results
        run: |
          git checkout ${{ github.base_ref }}
          cd apps/product
          pnpm reassure --baseline
          git checkout -
      
      - name: Run performance tests on PR branch
        run: |
          cd apps/product
          pnpm reassure
      
      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reassure-results
          path: apps/product/.reassure
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const resultsPath = 'apps/product/.reassure/output.md';
            
            if (!fs.existsSync(resultsPath)) {
              console.log('No performance results found');
              return;
            }
            
            const results = fs.readFileSync(resultsPath, 'utf8');
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('React Native Performance Results')
            );
            
            const body = `## ðŸ“± React Native Performance Results\n\n${results}`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }