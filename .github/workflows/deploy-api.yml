name: Deploy API to Firebase

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api/**'
      - 'firebase.json'
      - 'firestore.rules'
      - 'pnpm-lock.yaml'
      - '.github/workflows/deploy-api.yml'

jobs:
  lint-api:
    name: Lint API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Biome lint on API
        run: pnpm --filter api lint

  typecheck-api:
    name: Type Check API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run type checking on API
        run: pnpm --filter api typecheck

  deploy_production:
    name: Deploy to Production
    if: github.repository == 'braingame-com/braingame'
    runs-on: ubuntu-latest
    needs: [lint-api, typecheck-api]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Deploy to Firebase
        run: npx firebase-tools deploy --only functions,firestore,hosting:braingame-prod-api --project=braingame-prod --force 